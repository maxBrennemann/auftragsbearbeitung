FROM node:24-alpine AS frontend-builder

WORKDIR /app

COPY package.json package-lock.json ./

RUN npm ci --include=dev && npm cache clean --force

COPY . .

RUN npm run build

FROM composer:2.8.11 AS composer

WORKDIR /var/www/html
COPY composer.json composer.lock ./
RUN composer install \
    --no-dev \
    --prefer-dist \
    --no-scripts \
    --no-progress \
    --optimize-autoloader

FROM php:8.4.11-fpm-alpine

ARG UID=1000
ARG GID=1000

RUN echo "upload_max_filesize=100M" > /usr/local/etc/php/conf.d/uploads.ini \
 && echo "post_max_size=100M" >> /usr/local/etc/php/conf.d/uploads.ini

# Install some base extensions
RUN apk add --no-cache --virtual .build-deps \
        $PHPIZE_DEPS \
        libpng-dev \
        libzip-dev \
        zlib-dev \
    && apk add --no-cache \
        dcron \
    # Build extensions
    && docker-php-ext-install pdo_mysql mysqli zip gd \
    # Remove build deps afterwards â†’ smaller image
    && apk del .build-deps

# Set the document root
WORKDIR /var/www/html

# PHP config
COPY .config/php-config.ini /usr/local/etc/php/conf.d/custom.ini
COPY .config/php.conf /usr/local/etc/php-fpm.d/custom-php.conf
COPY . .

# https://stackoverflow.com/questions/73991553/permission-denied-for-laravel-and-docker
# user muss danach gesetzt werden, da sonst die Rechte nicht stimmen
RUN apk add --no-cache shadow \
  && usermod --non-unique --uid $UID www-data \
  && groupmod --non-unique --gid $UID www-data \
  && chown -R www-data:www-data /var/www \
  && apk del shadow

# Create cron log
RUN touch /var/log/cron.log

# Copy assets and dependencies into final image
COPY --from=composer /var/www/html/vendor ./vendor
RUN ./console autoupgrade --skip-migration
COPY --from=frontend-builder /app/files/res/assets ./files/res/assets

RUN rm -rf files/res/js
RUN rm -rf files/res/css

# Fix ownership
RUN chown -R www-data:www-data /var/www/html

CMD ["php-fpm"]
