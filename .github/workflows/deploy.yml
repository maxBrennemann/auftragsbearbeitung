name: Auftragsbearbeitung Deploy

on:
  push:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Dockerhub
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache-app
          key: ${{ runner.os }}-buildx-app-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-app

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          driver: docker-container
          driver-opts: network=host
          buildkitd-flags: --debug
          use: true

      - name: Build And Push PHP Base Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .config/Dockerfile.prod
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          cache-from: type=local,src=/tmp/.buildx-cache-app
          cache-to: type=local,dest=/tmp/.buildx-cache-app-new,mode=max
          tags: |
            ghcr.io/maxbrennemann/auftragsbearbeitung/php-base:latest
            ghcr.io/maxbrennemann/auftragsbearbeitung/php-base:${{ github.sha }}

      - name: Build And Push Nginx Image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .config/nginx/Dockerfile.prod
          push: true
          tags: |
            ghcr.io/maxbrennemann/auftragsbearbeitung/nginx:latest
            ghcr.io/maxbrennemann/auftragsbearbeitung/nginx:${{ github.sha }}

      - name: APP::Move cache
        run: |
          rm -rf /tmp/.buildx-cache-app
          mv /tmp/.buildx-cache-app-new /tmp/.buildx-cache-app

  deploy:
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Generate .env file
        run: |
          cat > .env <<EOL
          DOMAIN=${{ secrets.DOMAIN }}
          LETSENCRYPT_EMAIL=${{ secrets.LETSENCRYPT_EMAIL }}

          DB_DATABASE=${{ secrets.DB_DATABASE }}
          DB_USERNAME=${{ secrets.DB_USERNAME }}
          DB_PASSWORD=${{ secrets.DB_PASSWORD }}
          DB_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}

          # extra app settings
          ERRORREPORTING=true
          DEV_MODE=false
          OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
          SHOPURL=${{ secrets.SHOPURL }}
          SHOPKEY=${{ secrets.SHOPKEY }}
          MAIL_ADDRESS_ALERTS=${{ secrets.MAIL_ADDRESS_ALERTS }}
          EOL

      - name: Copy config to server
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          source: "docker-compose.prod.yml,.env"
          target: "/srv/auftragsbearbeitung"

      - name: Deploy containers
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            cd /srv/auftragsbearbeitung
            docker compose -f docker-compose.prod.yml pull
            docker compose -f docker-compose.prod.yml up -d --remove-orphans
